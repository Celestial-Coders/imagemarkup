{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\parij\\\\reactfirst\\\\src\\\\pages\\\\Home.js\",\n  _s = $RefreshSig$();\nimport power from '../assets/images/power.jpg';\nimport king from '../assets/images/king.jpg';\nimport monster from '../assets/images/monster.jpg';\nimport '../App.css';\nimport { useEffect, useRef, useState } from 'react';\nimport { Annotorious } from '@recogito/annotorious';\nimport '@recogito/annotorious/dist/annotorious.min.css';\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Home() {\n  _s();\n  // Ref to the image DOM element\n  const imgE = useRef();\n\n  // The current Annotorious instance\n  const [anno, setAnno] = useState();\n\n  // Current drawing tool name\n  const [tool, setTool] = useState('rect');\n\n  // Current Annotations\n  const [strannos, setStrannos] = useState('no annotations yet');\n  var annotations;\n  const [error, setError] = useState('');\n\n  // Init Annotorious when the component\n  // mounts, and keep the current 'anno'\n  // instance in the application state\n  useEffect(() => {\n    let processing = true;\n    //axiosFetchData(processing)\n\n    let annotorious = null;\n    if (imgE.current) {\n      // Init\n      annotorious = new Annotorious({\n        image: imgE.current\n      });\n\n      //annotations = annotorious.getAnnotations();\n      //stranno = annotations;\n\n      // Attach event handlers here\n      annotorious.on('createAnnotation', annotation => {\n        console.log('created', annotation);\n        //console.log('annotations', annotations);\n      });\n\n      annotorious.on('updateAnnotation', (annotation, previous) => {\n        console.log('updated', annotation, previous);\n      });\n      annotorious.on('deleteAnnotation', annotation => {\n        console.log('deleted', annotation);\n      });\n    }\n\n    // Keep current Annotorious instance in state\n    setAnno(annotorious);\n\n    // Cleanup: destroy current instance\n    return () => {\n      processing = false;\n      annotorious.destroy();\n    };\n  }, []);\n\n  // Toggles current tool + button label\n  const toggleTool = () => {\n    if (tool === 'rect') {\n      setTool('polygon');\n      anno.setDrawingTool('polygon');\n    } else {\n      setTool('rect');\n      anno.setDrawingTool('rect');\n    }\n  };\n  var timestamp = new Date().getTime();\n  var image = document.getElementById(\"img\");\n  //var imgE = imgE;\n\n  const image1 = () => {\n    image.src = power;\n  };\n  const image2 = () => {\n    image.src = king;\n    //imgE = imgE2;\n  };\n\n  const image3 = () => {\n    image.src = monster;\n  };\n  const showAnno = () => {\n    //const annotations = annotorious.getAnnotations();\n    // stranno = annotations.body[0].value\n    annotations = anno.getAnnotations();\n    console.log('Existing Annotations:', annotations);\n    var temp = \"\";\n    if (annotations.length > 0) {\n      for (let i = 0; i < annotations.length; i++) {\n        temp = temp + annotations[i].body[0].value;\n        if (i != annotations.length - 1) {\n          temp = temp + \", \";\n        }\n      }\n      setStrannos( /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"success\",\n        children: temp\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 23\n      }, this));\n    }\n    //stranno = annotations[0].body[0].value\n  };\n\n  const loadAnno = () => {\n    anno.addAnnotation({});\n  };\n  const axiosFetchData = async processing => {\n    await axios.get('http://localhost:4000/users').then(res => {\n      if (processing) {\n        setSelectData(res.data);\n      }\n    }).catch(err => console.log(err));\n  };\n  const saveAnno = e => {\n    e.preventDefault();\n    axiosPostData();\n  };\n  const axiosPostData = async () => {\n    const postData = anno.getAnnotations();\n    await axios.post('http://localhost:4000/save-anno', postData).then(res => setError( /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"success\",\n      children: res.data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 29\n    }, this)));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleTool,\n        children: tool === 'rect' ? 'RECTANGLE' : 'POLYGON'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: showAnno,\n        children: \"Show Annotations\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: saveAnno,\n        children: \"Save Annotations\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: loadAnno,\n        children: \"Load Annotations\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 11\n      }, this), strannos, error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      id: \"img\",\n      ref: imgE,\n      src: power,\n      alt: \"power\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 148,\n    columnNumber: 7\n  }, this);\n}\n_s(Home, \"37kNGleieyroLRXOtreQnwN2ivw=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["power","king","monster","useEffect","useRef","useState","Annotorious","axios","jsxDEV","_jsxDEV","Home","_s","imgE","anno","setAnno","tool","setTool","strannos","setStrannos","annotations","error","setError","processing","annotorious","current","image","on","annotation","console","log","previous","destroy","toggleTool","setDrawingTool","timestamp","Date","getTime","document","getElementById","image1","src","image2","image3","showAnno","getAnnotations","temp","length","i","body","value","className","children","fileName","_jsxFileName","lineNumber","columnNumber","loadAnno","addAnnotation","axiosFetchData","get","then","res","setSelectData","data","catch","err","saveAnno","e","preventDefault","axiosPostData","postData","post","onClick","id","ref","alt","_c","$RefreshReg$"],"sources":["C:/Users/parij/reactfirst/src/pages/Home.js"],"sourcesContent":["import power from '../assets/images/power.jpg';\r\nimport king from '../assets/images/king.jpg';\r\nimport monster from '../assets/images/monster.jpg';\r\nimport '../App.css';\r\nimport { useEffect, useRef, useState } from 'react';\r\nimport { Annotorious } from '@recogito/annotorious';\r\nimport '@recogito/annotorious/dist/annotorious.min.css';\r\nimport axios from \"axios\"\r\n\r\nfunction Home() {\r\n\r\n    // Ref to the image DOM element\r\n    const imgE = useRef();\r\n  \r\n    // The current Annotorious instance\r\n    const [ anno, setAnno ] = useState();\r\n  \r\n    // Current drawing tool name\r\n    const [ tool, setTool ] = useState('rect');\r\n  \r\n    // Current Annotations\r\n    const [ strannos, setStrannos ] = useState('no annotations yet');\r\n    var annotations;\r\n    \r\n    const [error, setError] = useState('');\r\n  \r\n    // Init Annotorious when the component\r\n    // mounts, and keep the current 'anno'\r\n    // instance in the application state\r\n    useEffect(() => {\r\n\r\n      let processing = true\r\n      //axiosFetchData(processing)\r\n\r\n      let annotorious = null;\r\n  \r\n      if (imgE.current) {\r\n        // Init\r\n        annotorious = new Annotorious({\r\n          image: imgE.current,\r\n        });\r\n        \r\n        //annotations = annotorious.getAnnotations();\r\n        //stranno = annotations;\r\n        \r\n        // Attach event handlers here\r\n        annotorious.on('createAnnotation', annotation => {\r\n          console.log('created', annotation);\r\n          //console.log('annotations', annotations);\r\n        });\r\n        \r\n        annotorious.on('updateAnnotation', (annotation, previous) => {\r\n          console.log('updated', annotation, previous);\r\n        });\r\n  \r\n        annotorious.on('deleteAnnotation', annotation => {\r\n          console.log('deleted', annotation);\r\n        });\r\n  \r\n  \r\n      }\r\n\r\n      // Keep current Annotorious instance in state\r\n      setAnno(annotorious);\r\n      \r\n      // Cleanup: destroy current instance\r\n      return () => {\r\n          processing = false;\r\n          annotorious.destroy();\r\n      }\r\n    }, []);\r\n  \r\n    \r\n    // Toggles current tool + button label\r\n    const toggleTool = () => {\r\n      if (tool === 'rect') {\r\n        setTool('polygon');\r\n        anno.setDrawingTool('polygon');\r\n      } else {\r\n        setTool('rect');\r\n        anno.setDrawingTool('rect');\r\n      }\r\n    }\r\n    \r\n    var timestamp = new Date().getTime();\r\n    var image =document.getElementById(\"img\");\r\n    //var imgE = imgE;\r\n    \r\n    const image1 = () => {\r\n      image.src = power\r\n    }\r\n    const image2 = () => {\r\n      image.src = king\r\n      //imgE = imgE2;\r\n    }\r\n    const image3 = () => {\r\n      image.src = monster \r\n    }\r\n\r\n    const showAnno = () => {\r\n      //const annotations = annotorious.getAnnotations();\r\n      // stranno = annotations.body[0].value\r\n      annotations = anno.getAnnotations();\r\n      console.log('Existing Annotations:', annotations);\r\n      var temp = \"\";\r\n      if(annotations.length > 0){\r\n        for(let i = 0; i < annotations.length; i++){\r\n          temp = temp + annotations[i].body[0].value\r\n          if(i != annotations.length-1){\r\n              temp = temp + \", \"\r\n          }\r\n        }\r\n          setStrannos(<p className=\"success\">{temp}</p>);\r\n      }\r\n      //stranno = annotations[0].body[0].value\r\n    }\r\n\r\n    const loadAnno = () => {\r\n\r\n      anno.addAnnotation({\r\n      });\r\n    }\r\n\r\n    const axiosFetchData = async(processing) => {\r\n      await axios.get('http://localhost:4000/users')\r\n      .then(res => {\r\n          if (processing) {\r\n              setSelectData(res.data)\r\n          }\r\n      })\r\n      .catch(err => console.log(err))\r\n  }\r\n\r\n    const saveAnno = (e) => {\r\n      e.preventDefault();\r\n\r\n      axiosPostData();\r\n    }\r\n  \r\n    \r\n    const axiosPostData = async() => {\r\n      const postData = anno.getAnnotations();\r\n      await axios.post('http://localhost:4000/save-anno', postData)\r\n      .then(res => setError(<p className=\"success\">{res.data}</p>))\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <div>\r\n          <button\r\n            onClick={toggleTool}>\r\n              { tool === 'rect' ? 'RECTANGLE' : 'POLYGON' }\r\n          </button>\r\n          <button\r\n            onClick={showAnno}>\r\n              Show Annotations\r\n          </button>\r\n          {/* <button onClick={image1}>image1</button>\r\n          <button onClick={image2}>image2</button>\r\n          <button onClick={image3}>image3</button> */}\r\n          <button onClick={saveAnno}>Save Annotations</button> \r\n          <button onClick={loadAnno}>Load Annotations</button> \r\n\r\n        {strannos}\r\n        {error}\r\n        </div>\r\n\r\n\r\n        <img \r\n          id=\"img\"\r\n          ref={imgE} \r\n          src={power} \r\n          alt=\"power\" />\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  export default Home;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}