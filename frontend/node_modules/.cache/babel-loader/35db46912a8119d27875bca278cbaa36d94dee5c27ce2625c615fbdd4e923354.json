{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\parij\\\\reactfirst\\\\src\\\\pages\\\\Home.js\",\n  _s = $RefreshSig$();\nimport power from '../assets/images/power.jpg';\nimport king from '../assets/images/king.jpg';\nimport monster from '../assets/images/monster.jpg';\nimport '../App.css';\nimport { useEffect, useRef, useState } from 'react';\nimport { Annotorious } from '@recogito/annotorious';\nimport '@recogito/annotorious/dist/annotorious.min.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Home() {\n  _s();\n  // Ref to the image DOM element\n  const imgE = useRef();\n\n  // The current Annotorious instance\n  const [anno, setAnno] = useState();\n\n  // Current drawing tool name\n  const [tool, setTool] = useState('rect');\n\n  // Current Annotations\n  const [strannos, setStrannos] = useState('no annotations yet');\n  var annotations;\n\n  // Init Annotorious when the component\n  // mounts, and keep the current 'anno'\n  // instance in the application state\n  useEffect(() => {\n    let annotorious = null;\n    if (imgE.current) {\n      // Init\n      annotorious = new Annotorious({\n        image: imgE.current\n      });\n\n      //annotations = annotorious.getAnnotations();\n      //stranno = annotations;\n\n      // Attach event handlers here\n      annotorious.on('createAnnotation', annotation => {\n        console.log('created', annotation);\n        //console.log('annotations', annotations);\n      });\n\n      annotorious.on('updateAnnotation', (annotation, previous) => {\n        console.log('updated', annotation, previous);\n      });\n      annotorious.on('deleteAnnotation', annotation => {\n        console.log('deleted', annotation);\n      });\n    }\n\n    // Keep current Annotorious instance in state\n    setAnno(annotorious);\n\n    // Cleanup: destroy current instance\n    return () => annotorious.destroy();\n  }, []);\n\n  // Toggles current tool + button label\n  const toggleTool = () => {\n    if (tool === 'rect') {\n      setTool('polygon');\n      anno.setDrawingTool('polygon');\n    } else {\n      setTool('rect');\n      anno.setDrawingTool('rect');\n    }\n  };\n  const showAnno = () => {\n    //const annotations = annotorious.getAnnotations();\n    // stranno = annotations.body[0].value\n    annotations = anno.getAnnotations();\n    console.log('Existing Annotations:', annotations);\n    var temp = \"\";\n    if (annotations.length > 0) {\n      for (let i = 0; i < annotations.length; i++) {\n        temp = temp + annotations[i].body[0].value;\n        if (i != annotations.length - 1) {\n          temp = temp + \", \";\n        }\n      }\n      setStrannos(temp);\n    }\n    //stranno = annotations[0].body[0].value\n  };\n\n  var timestamp = new Date().getTime();\n  var image = document.getElementById(\"img\");\n  //var imgE = imgE;\n\n  const image1 = () => {\n    image.src = power;\n  };\n  const image2 = () => {\n    image.src = king;\n    //imgE = imgE2;\n  };\n\n  const image3 = () => {\n    image.src = monster;\n  };\n\n  // const fs = require('fs');\n\n  // function saveAnnotationsToFile(annotations) {\n  //   const filePath = 'annotations.json'; // Path to your existing JSON file\n\n  //   // Read the existing JSON file\n  //   fs.readFile(filePath, 'utf8', (err, data) => {\n  //     if (err) {\n  //       console.error('Error reading file:', err);\n  //       return;\n  //     }\n\n  //     // Parse the existing JSON data\n  //     let existingAnnotations = JSON.parse(data);\n\n  //     // Merge the new annotations with the existing ones\n  //     existingAnnotations = [...existingAnnotations, ...annotations];\n\n  //     // Write the updated annotations back to the file\n  //     fs.writeFile(filePath, JSON.stringify(existingAnnotations, null, 2), 'utf8', (err) => {\n  //       if (err) {\n  //         console.error('Error writing file:', err);\n  //         return;\n  //       }\n\n  //       console.log('Annotations saved to file.');\n  //     });\n  //   });\n  // }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleTool,\n        children: tool === 'rect' ? 'RECTANGLE' : 'POLYGON'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: showAnno,\n        children: \"Show Annotations\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: image1,\n        children: \"image1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: image2,\n        children: \"image2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: image3,\n        children: \"image3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"Save Annotations\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 27\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        to: \"/\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          children: \"Save Annotations\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 22\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: strannos\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      id: \"img\",\n      ref: imgE,\n      src: power,\n      alt: \"power\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 142,\n    columnNumber: 7\n  }, this);\n}\n_s(Home, \"2JAu8HsEVrdpbeMI63aoWPVE0sI=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["power","king","monster","useEffect","useRef","useState","Annotorious","jsxDEV","_jsxDEV","Home","_s","imgE","anno","setAnno","tool","setTool","strannos","setStrannos","annotations","annotorious","current","image","on","annotation","console","log","previous","destroy","toggleTool","setDrawingTool","showAnno","getAnnotations","temp","length","i","body","value","timestamp","Date","getTime","document","getElementById","image1","src","image2","image3","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","href","to","type","id","ref","alt","_c","$RefreshReg$"],"sources":["C:/Users/parij/reactfirst/src/pages/Home.js"],"sourcesContent":["import power from '../assets/images/power.jpg';\r\nimport king from '../assets/images/king.jpg';\r\nimport monster from '../assets/images/monster.jpg';\r\nimport '../App.css';\r\nimport { useEffect, useRef, useState } from 'react';\r\nimport { Annotorious } from '@recogito/annotorious';\r\nimport '@recogito/annotorious/dist/annotorious.min.css';\r\n\r\nfunction Home() {\r\n\r\n    // Ref to the image DOM element\r\n    const imgE = useRef();\r\n  \r\n    // The current Annotorious instance\r\n    const [ anno, setAnno ] = useState();\r\n  \r\n    // Current drawing tool name\r\n    const [ tool, setTool ] = useState('rect');\r\n  \r\n    // Current Annotations\r\n    const [ strannos, setStrannos ] = useState('no annotations yet');\r\n    var annotations;\r\n  \r\n    // Init Annotorious when the component\r\n    // mounts, and keep the current 'anno'\r\n    // instance in the application state\r\n    useEffect(() => {\r\n      let annotorious = null;\r\n  \r\n      if (imgE.current) {\r\n        // Init\r\n        annotorious = new Annotorious({\r\n          image: imgE.current,\r\n        });\r\n        \r\n        //annotations = annotorious.getAnnotations();\r\n        //stranno = annotations;\r\n        \r\n        // Attach event handlers here\r\n        annotorious.on('createAnnotation', annotation => {\r\n          console.log('created', annotation);\r\n          //console.log('annotations', annotations);\r\n        });\r\n        \r\n        annotorious.on('updateAnnotation', (annotation, previous) => {\r\n          console.log('updated', annotation, previous);\r\n        });\r\n  \r\n        annotorious.on('deleteAnnotation', annotation => {\r\n          console.log('deleted', annotation);\r\n        });\r\n  \r\n  \r\n      }\r\n  \r\n  \r\n      // Keep current Annotorious instance in state\r\n      setAnno(annotorious);\r\n      \r\n      \r\n      // Cleanup: destroy current instance\r\n      return () => annotorious.destroy();\r\n    }, []);\r\n  \r\n  \r\n    // Toggles current tool + button label\r\n    const toggleTool = () => {\r\n      if (tool === 'rect') {\r\n        setTool('polygon');\r\n        anno.setDrawingTool('polygon');\r\n      } else {\r\n        setTool('rect');\r\n        anno.setDrawingTool('rect');\r\n      }\r\n    }\r\n    \r\n  \r\n    const showAnno = () => {\r\n      //const annotations = annotorious.getAnnotations();\r\n      // stranno = annotations.body[0].value\r\n      annotations = anno.getAnnotations();\r\n      console.log('Existing Annotations:', annotations);\r\n      var temp = \"\";\r\n      if(annotations.length > 0){\r\n        for(let i = 0; i < annotations.length; i++){\r\n          temp = temp + annotations[i].body[0].value\r\n          if(i != annotations.length-1){\r\n              temp = temp + \", \"\r\n          }\r\n        }\r\n          setStrannos(temp);\r\n      }\r\n      //stranno = annotations[0].body[0].value\r\n    }\r\n  \r\n    var timestamp = new Date().getTime();\r\n    var image =document.getElementById(\"img\");\r\n    //var imgE = imgE;\r\n    \r\n    const image1 = () => {\r\n      image.src = power\r\n    }\r\n    const image2 = () => {\r\n      image.src = king\r\n      //imgE = imgE2;\r\n    }\r\n    const image3 = () => {\r\n      image.src = monster \r\n    }\r\n  \r\n    // const fs = require('fs');\r\n  \r\n    // function saveAnnotationsToFile(annotations) {\r\n    //   const filePath = 'annotations.json'; // Path to your existing JSON file\r\n    \r\n    //   // Read the existing JSON file\r\n    //   fs.readFile(filePath, 'utf8', (err, data) => {\r\n    //     if (err) {\r\n    //       console.error('Error reading file:', err);\r\n    //       return;\r\n    //     }\r\n    \r\n    //     // Parse the existing JSON data\r\n    //     let existingAnnotations = JSON.parse(data);\r\n    \r\n    //     // Merge the new annotations with the existing ones\r\n    //     existingAnnotations = [...existingAnnotations, ...annotations];\r\n    \r\n    //     // Write the updated annotations back to the file\r\n    //     fs.writeFile(filePath, JSON.stringify(existingAnnotations, null, 2), 'utf8', (err) => {\r\n    //       if (err) {\r\n    //         console.error('Error writing file:', err);\r\n    //         return;\r\n    //       }\r\n    \r\n    //       console.log('Annotations saved to file.');\r\n    //     });\r\n    //   });\r\n    // }\r\n  \r\n    return (\r\n      <div>\r\n        <div>\r\n          <button\r\n            onClick={toggleTool}>\r\n              { tool === 'rect' ? 'RECTANGLE' : 'POLYGON' }\r\n          </button>\r\n          <button\r\n            onClick={showAnno}>\r\n              Show Annotations\r\n          </button>\r\n          <button onClick={image1}>image1</button>\r\n          <button onClick={image2}>image2</button>\r\n          <button onClick={image3}>image3</button>\r\n          <li><a href=\"/\"><button>Save Annotations</button></a></li>\r\n          <li to=\"/\"><button type=\"button\">Save Annotations</button></li>\r\n          {/* <button onClick={saveAnnotationsToFile}>Save Annotations</button> */}\r\n        </div>\r\n  \r\n        <p>{strannos}</p>\r\n  \r\n        <img \r\n          id=\"img\"\r\n          ref={imgE} \r\n          src={power} \r\n          alt=\"power\" />\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  export default Home;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}