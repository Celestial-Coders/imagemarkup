{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\parij\\\\reactfirst\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport power from './power.jpg';\nimport king from './king.jpg';\nimport monster from './monster.jpg';\nimport './App.css';\nimport { useEffect, useRef, useState } from 'react';\nimport { Annotorious } from '@recogito/annotorious';\nimport '@recogito/annotorious/dist/annotorious.min.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // Ref to the image DOM element\n  const imgE = useRef();\n\n  // The current Annotorious instance\n  const [anno, setAnno] = useState();\n\n  // Current drawing tool name\n  const [tool, setTool] = useState('rect');\n\n  // Current Annotations\n  var annotations;\n  var stranno;\n\n  // Init Annotorious when the component\n  // mounts, and keep the current 'anno'\n  // instance in the application state\n  useEffect(() => {\n    let annotorious = null;\n    if (imgE.current) {\n      // Init\n      annotorious = new Annotorious({\n        image: imgE.current\n      });\n      annotations = annotorious.getAnnotations();\n      stranno = annotations;\n\n      // Attach event handlers here\n      annotorious.on('createAnnotation', annotation => {\n        console.log('created', annotation);\n        console.log('annotations', annotations);\n      });\n      annotorious.on('updateAnnotation', (annotation, previous) => {\n        console.log('updated', annotation, previous);\n      });\n      annotorious.on('deleteAnnotation', annotation => {\n        console.log('deleted', annotation);\n      });\n    }\n    anno.addAnnotation({\n      text: 'Example Annotation',\n      shapes: [{\n        type: 'rect',\n        geometry: {\n          x: 100,\n          y: 100,\n          width: 200,\n          height: 150\n        }\n      }]\n    });\n\n    // Keep current Annotorious instance in state\n    setAnno(annotorious);\n    annotations = annotorious.getAnnotations();\n    console.log('Existing Annotations:', annotations);\n\n    // Cleanup: destroy current instance\n    return () => annotorious.destroy();\n  }, []);\n\n  // Toggles current tool + button label\n  const toggleTool = () => {\n    if (tool === 'rect') {\n      setTool('polygon');\n      anno.setDrawingTool('polygon');\n    } else {\n      setTool('rect');\n      anno.setDrawingTool('rect');\n    }\n  };\n  const showAnno = () => {\n    //const annotations = annotorious.getAnnotations();\n    // stranno = annotations.body[0].value\n  };\n  var timestamp = new Date().getTime();\n  var image = document.getElementById(\"img\");\n  //var imgE = imgE;\n\n  const image1 = () => {\n    image.src = power;\n  };\n  const image2 = () => {\n    image.src = king;\n    //imgE = imgE2;\n  };\n\n  const image3 = () => {\n    image.src = monster;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleTool,\n        children: tool === 'rect' ? 'RECTANGLE' : 'POLYGON'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: showAnno,\n        children: \"Show Annotations\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: image1,\n        children: \"image1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: image2,\n        children: \"image2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: image3,\n        children: \"image3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: stranno\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      id: \"img\",\n      ref: imgE,\n      src: power,\n      alt: \"power\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"6/02c6u2cQfg1p5pdqPvHJBS84M=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["power","king","monster","useEffect","useRef","useState","Annotorious","jsxDEV","_jsxDEV","App","_s","imgE","anno","setAnno","tool","setTool","annotations","stranno","annotorious","current","image","getAnnotations","on","annotation","console","log","previous","addAnnotation","text","shapes","type","geometry","x","y","width","height","destroy","toggleTool","setDrawingTool","showAnno","timestamp","Date","getTime","document","getElementById","image1","src","image2","image3","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","id","ref","alt","_c","$RefreshReg$"],"sources":["C:/Users/parij/reactfirst/src/App.js"],"sourcesContent":["import power from './power.jpg';\nimport king from './king.jpg';\nimport monster from './monster.jpg';\nimport './App.css';\nimport { useEffect, useRef, useState } from 'react';\nimport { Annotorious } from '@recogito/annotorious';\nimport '@recogito/annotorious/dist/annotorious.min.css';\n\nfunction App() {\n\n  // Ref to the image DOM element\n  const imgE = useRef();\n\n  // The current Annotorious instance\n  const [ anno, setAnno ] = useState();\n\n  // Current drawing tool name\n  const [ tool, setTool ] = useState('rect');\n\n  // Current Annotations\n  var annotations;\n  var stranno;\n\n  // Init Annotorious when the component\n  // mounts, and keep the current 'anno'\n  // instance in the application state\n  useEffect(() => {\n    let annotorious = null;\n\n    if (imgE.current) {\n      // Init\n      annotorious = new Annotorious({\n        image: imgE.current,\n      });\n      \n      annotations = annotorious.getAnnotations();\n      stranno = annotations;\n      \n      // Attach event handlers here\n      annotorious.on('createAnnotation', annotation => {\n        console.log('created', annotation);\n        console.log('annotations', annotations);\n      });\n\n      annotorious.on('updateAnnotation', (annotation, previous) => {\n        console.log('updated', annotation, previous);\n      });\n\n      annotorious.on('deleteAnnotation', annotation => {\n        console.log('deleted', annotation);\n      });\n\n    }\n\n    anno.addAnnotation({\n      text: 'Example Annotation',\n      shapes: [\n        {\n          type: 'rect',\n          geometry: { x: 100, y: 100, width: 200, height: 150 }\n        }\n      ]\n    });\n    \n    // Keep current Annotorious instance in state\n    setAnno(annotorious);\n    \n    annotations = annotorious.getAnnotations();\n    console.log('Existing Annotations:', annotations);\n    \n    // Cleanup: destroy current instance\n    return () => annotorious.destroy();\n  }, []);\n\n\n  // Toggles current tool + button label\n  const toggleTool = () => {\n    if (tool === 'rect') {\n      setTool('polygon');\n      anno.setDrawingTool('polygon');\n    } else {\n      setTool('rect');\n      anno.setDrawingTool('rect');\n    }\n  }\n\n  const showAnno = () => {\n    //const annotations = annotorious.getAnnotations();\n    // stranno = annotations.body[0].value\n  }\n\n  var timestamp = new Date().getTime();\n  var image =document.getElementById(\"img\");\n  //var imgE = imgE;\n  \n  const image1 = () => {\n    image.src = power\n  }\n  const image2 = () => {\n    image.src = king\n    //imgE = imgE2;\n  }\n  const image3 = () => {\n    image.src = monster \n  }\n\n  return (\n    <div>\n      <div>\n        <button\n          onClick={toggleTool}>\n            { tool === 'rect' ? 'RECTANGLE' : 'POLYGON' }\n        </button>\n        <button\n          onClick={showAnno}>\n            Show Annotations\n        </button>\n        <button onClick={image1}>image1</button>\n        <button onClick={image2}>image2</button>\n        <button onClick={image3}>image3</button>\n\n      </div>\n\n      <p>{stranno}</p>\n\n      <img \n        id=\"img\"\n        ref={imgE} \n        src={power} \n        alt=\"power\" />\n    </div>\n  );\n}\n\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,aAAa;AAC/B,OAAOC,IAAI,MAAM,YAAY;AAC7B,OAAOC,OAAO,MAAM,eAAe;AACnC,OAAO,WAAW;AAClB,SAASC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AACnD,SAASC,WAAW,QAAQ,uBAAuB;AACnD,OAAO,gDAAgD;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAEb;EACA,MAAMC,IAAI,GAAGP,MAAM,CAAC,CAAC;;EAErB;EACA,MAAM,CAAEQ,IAAI,EAAEC,OAAO,CAAE,GAAGR,QAAQ,CAAC,CAAC;;EAEpC;EACA,MAAM,CAAES,IAAI,EAAEC,OAAO,CAAE,GAAGV,QAAQ,CAAC,MAAM,CAAC;;EAE1C;EACA,IAAIW,WAAW;EACf,IAAIC,OAAO;;EAEX;EACA;EACA;EACAd,SAAS,CAAC,MAAM;IACd,IAAIe,WAAW,GAAG,IAAI;IAEtB,IAAIP,IAAI,CAACQ,OAAO,EAAE;MAChB;MACAD,WAAW,GAAG,IAAIZ,WAAW,CAAC;QAC5Bc,KAAK,EAAET,IAAI,CAACQ;MACd,CAAC,CAAC;MAEFH,WAAW,GAAGE,WAAW,CAACG,cAAc,CAAC,CAAC;MAC1CJ,OAAO,GAAGD,WAAW;;MAErB;MACAE,WAAW,CAACI,EAAE,CAAC,kBAAkB,EAAEC,UAAU,IAAI;QAC/CC,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEF,UAAU,CAAC;QAClCC,OAAO,CAACC,GAAG,CAAC,aAAa,EAAET,WAAW,CAAC;MACzC,CAAC,CAAC;MAEFE,WAAW,CAACI,EAAE,CAAC,kBAAkB,EAAE,CAACC,UAAU,EAAEG,QAAQ,KAAK;QAC3DF,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEF,UAAU,EAAEG,QAAQ,CAAC;MAC9C,CAAC,CAAC;MAEFR,WAAW,CAACI,EAAE,CAAC,kBAAkB,EAAEC,UAAU,IAAI;QAC/CC,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEF,UAAU,CAAC;MACpC,CAAC,CAAC;IAEJ;IAEAX,IAAI,CAACe,aAAa,CAAC;MACjBC,IAAI,EAAE,oBAAoB;MAC1BC,MAAM,EAAE,CACN;QACEC,IAAI,EAAE,MAAM;QACZC,QAAQ,EAAE;UAAEC,CAAC,EAAE,GAAG;UAAEC,CAAC,EAAE,GAAG;UAAEC,KAAK,EAAE,GAAG;UAAEC,MAAM,EAAE;QAAI;MACtD,CAAC;IAEL,CAAC,CAAC;;IAEF;IACAtB,OAAO,CAACK,WAAW,CAAC;IAEpBF,WAAW,GAAGE,WAAW,CAACG,cAAc,CAAC,CAAC;IAC1CG,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAET,WAAW,CAAC;;IAEjD;IACA,OAAO,MAAME,WAAW,CAACkB,OAAO,CAAC,CAAC;EACpC,CAAC,EAAE,EAAE,CAAC;;EAGN;EACA,MAAMC,UAAU,GAAGA,CAAA,KAAM;IACvB,IAAIvB,IAAI,KAAK,MAAM,EAAE;MACnBC,OAAO,CAAC,SAAS,CAAC;MAClBH,IAAI,CAAC0B,cAAc,CAAC,SAAS,CAAC;IAChC,CAAC,MAAM;MACLvB,OAAO,CAAC,MAAM,CAAC;MACfH,IAAI,CAAC0B,cAAc,CAAC,MAAM,CAAC;IAC7B;EACF,CAAC;EAED,MAAMC,QAAQ,GAAGA,CAAA,KAAM;IACrB;IACA;EAAA,CACD;EAED,IAAIC,SAAS,GAAG,IAAIC,IAAI,CAAC,CAAC,CAACC,OAAO,CAAC,CAAC;EACpC,IAAItB,KAAK,GAAEuB,QAAQ,CAACC,cAAc,CAAC,KAAK,CAAC;EACzC;;EAEA,MAAMC,MAAM,GAAGA,CAAA,KAAM;IACnBzB,KAAK,CAAC0B,GAAG,GAAG9C,KAAK;EACnB,CAAC;EACD,MAAM+C,MAAM,GAAGA,CAAA,KAAM;IACnB3B,KAAK,CAAC0B,GAAG,GAAG7C,IAAI;IAChB;EACF,CAAC;;EACD,MAAM+C,MAAM,GAAGA,CAAA,KAAM;IACnB5B,KAAK,CAAC0B,GAAG,GAAG5C,OAAO;EACrB,CAAC;EAED,oBACEM,OAAA;IAAAyC,QAAA,gBACEzC,OAAA;MAAAyC,QAAA,gBACEzC,OAAA;QACE0C,OAAO,EAAEb,UAAW;QAAAY,QAAA,EAChBnC,IAAI,KAAK,MAAM,GAAG,WAAW,GAAG;MAAS;QAAAqC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvC,CAAC,eACT9C,OAAA;QACE0C,OAAO,EAAEX,QAAS;QAAAU,QAAA,EAAC;MAErB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACT9C,OAAA;QAAQ0C,OAAO,EAAEL,MAAO;QAAAI,QAAA,EAAC;MAAM;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACxC9C,OAAA;QAAQ0C,OAAO,EAAEH,MAAO;QAAAE,QAAA,EAAC;MAAM;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACxC9C,OAAA;QAAQ0C,OAAO,EAAEF,MAAO;QAAAC,QAAA,EAAC;MAAM;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAErC,CAAC,eAEN9C,OAAA;MAAAyC,QAAA,EAAIhC;IAAO;MAAAkC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAEhB9C,OAAA;MACE+C,EAAE,EAAC,KAAK;MACRC,GAAG,EAAE7C,IAAK;MACVmC,GAAG,EAAE9C,KAAM;MACXyD,GAAG,EAAC;IAAO;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACb,CAAC;AAEV;AAAC5C,EAAA,CA5HQD,GAAG;AAAAiD,EAAA,GAAHjD,GAAG;AA8HZ,eAAeA,GAAG;AAAC,IAAAiD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}