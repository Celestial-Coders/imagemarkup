{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\parij\\\\reactfirst\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport power from './power.jpg';\nimport './App.css';\nimport { useEffect, useRef, useState } from 'react';\nimport { Annotorious } from '@recogito/annotorious';\nimport '@recogito/annotorious/dist/annotorious.min.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // Ref to the image DOM element\n  const imgEl = useRef();\n\n  // The current Annotorious instance\n  const [anno, setAnno] = useState();\n\n  // Current drawing tool name\n  const [tool, setTool] = useState('rect');\n\n  // Init Annotorious when the component\n  // mounts, and keep the current 'anno'\n  // instance in the application state\n  useEffect(() => {\n    let annotorious = null;\n    if (imgEl.current) {\n      // Init\n      annotorious = new Annotorious({\n        image: imgEl.current,\n        disableEditor: true\n      });\n\n      // Attach event handlers here\n      annotorious.on('createAnnotation', annotation => {\n        console.log('created', annotation);\n      });\n      annotorious.on('updateAnnotation', (annotation, previous) => {\n        console.log('updated', annotation, previous);\n      });\n      annotorious.on('deleteAnnotation', annotation => {\n        console.log('deleted', annotation);\n      });\n    }\n\n    // Keep current Annotorious instance in state\n    setAnno(annotorious);\n\n    // Cleanup: destroy current instance\n    return () => annotorious.destroy();\n  }, []);\n\n  // Toggles current tool + button label\n  const toggleTool = () => {\n    if (tool === 'rect') {\n      setTool('polygon');\n      anno.setDrawingTool('polygon');\n    } else {\n      setTool('rect');\n      anno.setDrawingTool('rect');\n    }\n  };\n  const annotations = annotorious.getAnnotations();\n  const showAnno = () => {\n    const annotations = annotorious.getAnnotations();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleTool,\n        children: tool === 'rect' ? 'RECTANGLE' : 'POLYGON'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: showAnno,\n        children: \"Show Annotations\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      ref: imgEl,\n      src: power,\n      alt: \"Power\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"rBSEtxWBjtF3pGPXYcMYCzkRHEQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["power","useEffect","useRef","useState","Annotorious","jsxDEV","_jsxDEV","App","_s","imgEl","anno","setAnno","tool","setTool","annotorious","current","image","disableEditor","on","annotation","console","log","previous","destroy","toggleTool","setDrawingTool","annotations","getAnnotations","showAnno","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","ref","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/parij/reactfirst/src/App.js"],"sourcesContent":["import power from './power.jpg';\nimport './App.css';\nimport { useEffect, useRef, useState } from 'react';\nimport { Annotorious } from '@recogito/annotorious';\nimport '@recogito/annotorious/dist/annotorious.min.css';\n\nfunction App() {\n\n  // Ref to the image DOM element\n  const imgEl = useRef();\n\n  // The current Annotorious instance\n  const [ anno, setAnno ] = useState();\n\n  // Current drawing tool name\n  const [ tool, setTool ] = useState('rect');\n\n  // Init Annotorious when the component\n  // mounts, and keep the current 'anno'\n  // instance in the application state\n  useEffect(() => {\n    let annotorious = null;\n\n    if (imgEl.current) {\n      // Init\n      annotorious = new Annotorious({\n        image: imgEl.current,\n        disableEditor: true\n      });\n      \n      // Attach event handlers here\n      annotorious.on('createAnnotation', annotation => {\n        console.log('created', annotation);\n      });\n\n      annotorious.on('updateAnnotation', (annotation, previous) => {\n        console.log('updated', annotation, previous);\n      });\n\n      annotorious.on('deleteAnnotation', annotation => {\n        console.log('deleted', annotation);\n      });\n\n    }\n\n    // Keep current Annotorious instance in state\n    setAnno(annotorious);\n\n    // Cleanup: destroy current instance\n    return () => annotorious.destroy();\n  }, []);\n\n  // Toggles current tool + button label\n  const toggleTool = () => {\n    if (tool === 'rect') {\n      setTool('polygon');\n      anno.setDrawingTool('polygon');\n    } else {\n      setTool('rect');\n      anno.setDrawingTool('rect');\n    }\n  }\n\n  \n  const annotations = annotorious.getAnnotations();\n  const showAnno = () => {\n    const annotations = annotorious.getAnnotations();\n  }\n\n  return (\n    <div>\n      <div>\n        <button\n          onClick={toggleTool}>\n            { tool === 'rect' ? 'RECTANGLE' : 'POLYGON' }\n        </button>\n        <button\n          onClick={showAnno}>\n            Show Annotations\n        </button>\n      </div>\n\n      <p></p>\n\n      <img \n        ref={imgEl} \n        src={power} \n        alt=\"Power\" />\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}